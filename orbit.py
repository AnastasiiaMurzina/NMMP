def read_file(file_name): # чтение из файла
    with open(file_name, 'r') as f:
        h = float(f.readline()) # первая строчка - высота
        v = float(f.readline()) # потом начальная скорость
        alpha = float(f.readline()) # угол начальной скорости
    return h, v, alpha

earth_r = 6371 # радиус земли
mu = 6.67 * 5.972 * 10 ** 10 # гравитационная постоянная 6.67 * 10 ** (-11) * масса Земли 5.972 * 10 ** 24
n = 500 # число разбиение по времени
from math import pi, sin, cos # импорт для вычислений
import matplotlib.pyplot as plt # импорт для рисования
if __name__ == '__main__':
    h, v, alpha = read_file('input.txt')
    r0 = (earth_r + h) # добавили к высоте радиус Земли
    T = 2 * pi * (r0 ** 3 / mu) ** 0.5 # вычисления периода вращения спутника
    w0 = (mu / r0 ** 3) ** 0.5 # угловая скорость спутника
    dt = T / n # временной шаг
    x = [0, 0] # начальные координаты
    y = [0, 0] # храним два значения, потому что потом нужно вычислять изменение скорости
    vx0 = v * sin(alpha) # проекция на ОХ
    vy0 = v * cos(alpha) # проекция на ОУ, ОУ ось касательная к траектории движения спутника
    x.append(vx0 / w0 * sin(w0 * dt * 2) - 2 * vy0 / w0 * cos(w0 * dt * 2) + 2 * vy0 / w0) # добавляем третий шаг, через 2*dt времени спустя начала
    y.append(2 * vx0 / w0 * (cos(w0 * dt * 2) - 1) + 4 * vy0 / w0 * sin(w0 * dt) - 3 * vy0 * dt * 2) # изменения скоростей равны проекции скорости выброса на оси
    for i in range(n):
        dvx = (x[-1] - 2 * x[-2] + x[-3]) # изменение проекций скоростей
        dvy = (y[-1] - 2 * y[-2] + y[-3])
        x.append(dvx / w0 * sin(w0 * dt * (i + 3)) - 2 * dvy / w0 * cos(w0 * dt * (i + 3)) + 2 * dvy / w0) # расчёт следующего шага через предыдущий
        y.append(2 * dvx / w0 * (cos(w0 * dt * (i + 3)) - 1) + 4 * dvy / w0 * sin(w0 * dt * (i + 3)) - 3 * dvy * dt * (i + 3))
    plt.plot(x[:100], y[:100]) # рисуем график и подписываем оси
    plt.xlabel('x, km')
    plt.ylabel('y, km')
    plt.show() # выводим график
